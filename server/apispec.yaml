openapi: "3.0.2"
info:
  version: "1.0"
  title: Welcome to the Grade Scale API!
  description: This API allows users to view the grade scale
  license:
    name: "null"
    url: "null"
  contact:
    name: jared stevenson
    url: "https://github.com/JaredStevensonDI"
    email: jaredstevenson@developersinstitute.co.nz
servers:
  - url: "http://localhost:5001/api"
    description: Development server
  - url: "https://cat-couture-jared-di.herokuapp.com/api"
    description: Production server
paths:
  /products:
    get:
      summary: Returns a list of products
      description: Get a list of products
      operationId: get-products
      parameters:
        - schema:
            type: integer
            minimum: 1
          in: query
          name: limit
          description: The number of products to return
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  currentPage:
                    type: integer
                    example: 1
                  totalPages:
                    type: integer
                    example: 10
                  itemsPerPage:
                    type: integer
                    example: 10
                  totalItems:
                    type: integer
                    example: 100
                required:
                  - products
                  - currentPage
                  - totalPages
                  - itemsPerPage
                  - totalItems
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /reports:
    get:
      summary: Returns a list of reports
      description: Get a list of reports
      operationId: get-reports
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryReport:
                    $ref: "#/components/schemas/categoryReport"
                  discountReport:
                    $ref: "#/components/schemas/discountReport"
                required:
                  - categoryReport
                  - discountReport
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: string
        categoryName:
          type: string
          nullable: true
        imageName:
          type: string
          nullable: true
        imageDescription:
          type: string
          nullable: true
        discountValue:
          type: number
          nullable: true
        discountType:
          type: string
          nullable: true
      required:
        - id
        - name
        - description
        - price
        - categoryName
        - imageName
        - imageDescription
        - discountValue
        - discountType
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    categoryReport:
      type: array
      items:
        type: object
        properties:
          categoryName:
            type: string
          totalProducts:
            type: integer
            minimum: 0
            example: 5
          discountedProducts:
            type: integer
            minimum: 0
            example: 2
        required:
          - categoryName
          - discountedProducts
          - totalProducts
    discountReport:
      type: array
      items:
        type: object
        properties:
          discountType:
            type: string
            nullable: true
            enum:
              - null
              - "percentage off"
              - "fixed amount off"
          totalProducts:
            type: integer
            minimum: 0
            example: 95
        required:
          - discountType
          - totalProducts
tags:
  - name: products and reports
    description: hold product informtation and report info on products
